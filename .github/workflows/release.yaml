name: Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      branch_or_tag:
        required: false
      is_release:
        required: false
        default: false

jobs:
  mac:
    strategy:
      fail-fast: false
      matrix:
        otp:
          - 25.3.2-1
        os:
          - macos-11
          - macos-12
          - macos-12-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_or_tag }} # when input is not given, the event tag is used

      - uses: ./.github/actions/macos-erlang
        with:
          otp: ${{ matrix.otp }}
          os: ${{ matrix.os }}

      - name: build release
        run: |
          . $HOME/.kerl/${{ matrix.otp }}/activate
          ./build.sh

      - uses: actions/upload-artifact@v3
        with:
          name: packages
          path: |
            _packages/*.tar.gz
            _packages/*.tar.gz.sha256

  linux:
    strategy:
      fail-fast: false
      matrix:
        builder:
          - 5.1-3
        otp:
          - 25.3.2-1
        elixir:
          - 1.14.5
        arch:
          - amd64
          - arm64
        os:
          - ubuntu22.04
          - ubuntu20.04
          - ubuntu18.04
          - ubuntu16.04
          - debian12
          - debian11
          - debian10
          - debian9
          - amzn2
          - amzn2023
          - el7
          - el8
          - el9
          - alpine3.15.1
    runs-on: ubuntu-latest
    env:
      IMAGE: ghcr.io/emqx/emqx-builder/${{ matrix.builder }}:${{ matrix.elixir }}-${{ matrix.otp }}-${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_or_tag }} # when input is not given, the event tag is used

      - uses: docker/setup-buildx-action@v2
      - uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.arch }}

      - name: build release
        if: matrix.os == 'amzn2'
        run: |
          docker run -i --rm --user 1001 -v $(pwd):/wd --workdir /wd --platform=linux/${{ matrix.arch }} $IMAGE bash -euc 'alternatives --set python /usr/bin/python2 && yum install -y libtool && ./build.sh'

      - name: build release
        if: matrix.os != 'amzn2'
        run: |
          docker run -i --rm --user 1001 -v $(pwd):/wd --workdir /wd --platform=linux/${{ matrix.arch }} $IMAGE bash -euc './build.sh'

      - uses: actions/upload-artifact@v3
        with:
          name: packages
          path: |
            _packages/*.tar.gz
            _packages/*.tar.gz.sha256

  release:
    runs-on: ubuntu-latest
    needs:
      - mac
      - linux
    if: startsWith(github.ref, 'refs/tags/') || inputs.is_release == true
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: packages
          path: packages
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Erlang jq NIF ${{ github.ref_name }} Released
          files: "packages/*"
          draft: false
          prerelease: false
